---
- name: Ensure user's .ssh directory exists when needed
  ansible.builtin.file:
    path: "/home/{{ ua_merged_user.name }}/.ssh"
    state: directory
    owner: "{{ ua_merged_user.name }}"
    group: "{{ ua_merged_user.name }}"
    mode: "0700"
  when:
    - user_accounts_enable_key_mgmt | bool
      or (user_accounts_manage_ssh_config | bool and ua_merged_user.create_home | bool)

# Single designated public key
- name: Install authorized_keys from system_user.ssh_public_key_path
  ansible.posix.authorized_key:
    user: "{{ ua_merged_user.name }}"
    state: present
    key: "{{ lookup('file', ua_merged_user.ssh_public_key_path) }}"
  when:
    - user_accounts_enable_key_mgmt | bool
    - lookup('file', ua_merged_user.ssh_public_key_path, errors='ignore') != ''

# Any extra generated keys
- name: Install additional generated public keys
  ansible.posix.authorized_key:
    user: "{{ ua_merged_user.name }}"
    state: present
    key: "{{ lookup('file', user_accounts_ssh_key_dir ~ '/' ~ item ~ '.pub') }}"
  loop: "{{ user_accounts_generate_keys }}"
  when:
    - user_accounts_enable_key_mgmt | bool
    - user_accounts_generate_keys | length > 0

# Optional ~/.ssh/config
- name: Render ~/.ssh/config (optional)
  ansible.builtin.template:
    src: ssh_config.j2
    dest: "/home/{{ ua_merged_user.name }}/.ssh/config"
    owner: "{{ ua_merged_user.name }}"
    group: "{{ ua_merged_user.name }}"
    mode: "0600"
  when:
    - user_accounts_manage_ssh_config | bool
    - ua_merged_user.create_home | bool
