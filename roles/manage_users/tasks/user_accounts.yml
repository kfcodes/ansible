# === Merge system_user with default options and apply additional groups ===
# This builds the final_user object by combining base settings with host-specific overrides.
- name: Merge user variables into final_user
  set_fact:
    final_user: >-
      {{
        default_user_options
        | combine(system_user, recursive=True)
        | combine({'groups': merged_groups})
      }}
  vars:
    merged_groups: >-
      {{
        (system_user.groups | default([])) +
        (additional_groups | default([]))
        | unique
      }}

# === Ensure the system user account exists ===
# This task creates exactly one user per host, with optional parameters included only if defined.
- name: Create the system user
  user:
    name: "{{ final_user.name }}"
    shell: "{{ final_user.shell }}"
    create_home: "{{ final_user.create_home }}"
    groups: "{{ final_user.groups }}"
    append: true
    system: "{{ final_user.system | default(false) }}"
    password_lock: "{{ final_user.lock_password | default(omit) }}"
    uid: "{{ final_user.uid | default(omit) }}"
    group: "{{ final_user.primary_group | default(omit) }}"
    comment: "{{ final_user.comment | default(omit) }}"
    home: "{{ final_user.home | default(omit) }}"
  become: true
  register: user_create_result

# === Show confirmation and details of the created or updated user ===
# You can comment or remove this section later if it's no longer needed.
- name: Display user creation summary
  debug:
    msg: >-
      User '{{ final_user.name }}' was configured:
      - Groups: {{ final_user.groups | join(', ') }}
      - Home: {{ final_user.home | default('/home/' + final_user.name) }}
      - UID: {{ final_user.uid | default('auto-assigned') }}
      - System account: {{ final_user.system | default(false) }}
  when: user_create_result is defined and user_create_result.changed
